# 167.两数之和 II - 输入有序数组（Esy)
# 给定一个已经按照升序排列的有序数组，找到两个数使得它们的相加之和等于目标和
# 函数应该返回这两个下标值 index1 和 index2，其中 index1 必须小于 index2。
# 说明:
# 返回的下标值（index1 和 index2）不是从零开始的。
# 你可以假设每个输入只对应唯一的答案，而且你不可以重复使用相同的元素。
# 示例:
# 输入: numbers = [2, 7, 11, 15], target = 9
# 输出: [1,2]
# 解释: 2 与 7 之和等于目标数 9 。因此 index1 = 1, index2 = 2 。

class Solution(object):
    def twoSum(self, numbers, target):
        """
        :type numbers: List[int]
        :type target: int
        :rtype: List[int]
        """
        n = len(numbers)
        index1 = 0
        index2 = n-1
        while index1<index2:
            s = numbers[index1] + numbers[index2]
            if s == target:
                return [index1+1,index2+1]
            elif s<target:
                index1 += 1
            else:
                index2 -= 1
        return [-1,-1]


if __name__ == '__main__':
    numbers = [2,2,2,7,7,10,10,11,15]
    target = 9
    sl = Solution()
    res = sl.twoSum(numbers,target)
    print(res)
